I will be talking about Voronoi algorithm that makes this piece. I believe the back is as interesting as the front, the pleats have the property where if you look head on orthographically, the pleats lie orthogonally and trace the lines of the Voronoi graph.

It's also indiscriminate and works for any set of points, allowing you to use any set of points as an input. Here is Orion. These are all the subway stops on Manhattan island in New York City.

Before we get too deep, at the heart of this discussion is something very simple:
- when you bring 3 points together
- how do we resolve the material that bunches in the middle?
I'll show that this works for any 3 points.

first some constraints, the pleats we form are going to be perpendicular to edge of the triangle

some brief observations, 

..
Okay so how do we resolve this?

Let's take the simple case - it's a simple trio of angle bisection pleats. - notice the reversing along the center of the pleat ridge.

That turns:
- THIS
  into
- THIS



For people who are already familiar with origamizer, Tachi and Demaine's work, this is very related to origamizer algorithm, but theirs is in a more complex problem space. I'm only concerned with faces that lie in the same plane, 0 degree dihedral angles, zero Gaussian curvature.

I got very particular about the joint, this is the heart of the talk - the way that paper bunches up when 3 faces are joined. Even though there is a lot of fun stuff about Voronoi graphs I'll include.

I'll demonstrate how to nicely resolve the pleats that form when you bring 3 points together with all possible arrangements of 3 points. 

This is bringing together 3 points allowing 3 pleats to form, without allowing any rotation.

Let's dive in
========================

This is the overall experience of bringing together paper. You get pleats. and a triangular area of paper which needs to be resolved. if we don't worry about folding these pleats flat but rather aligning the pleats orthogonal to the plane we ca

1.------ ACUTE

the simplest case is an acute triangle, including the equilateral. it turns out if you 

2.------ RIGHT

right triangle is perhaps simpler except in practical real cases you never get an EXACT right triangle and half the time you end up with a thin sliver of a pleat which is damnit so frustratingly difficult to fold. 90deg right triangles are great. Otherwise avoid the 85-90 degree space.

3.------ OBTUSE

Acute triangles use up more space than the interior of the triangle defined by their points, because it INCLUDES the circumcenter. Thus making a quadrilateral.

Degenerate case of an obtuse triangle -> turns into just a pleat

-==========-
This covers all possible individual shapes and how they resolve. the next problem arises when 2 triangles occupy the same space.

However, let's bring it back to the Voronoi graph. reason being, you never have this condition of overlapping triangles. the voronoi graph being the dual of the Delaunay won't allow it. Delaunay makes it go like this.

regarding overlapping molecules, it's only ever possible with obtuse molecules. I'll demonstrate.
- two acute triangles getting close to each other
- same for right triangles


OVERLAPPING MOLECULES
---------------------

Here's how overlapping molecules get resolved
...
...
...
...






----------

This allows for any collections of points to be fed into the algorithm without any problems. I was able to do it with
- Stars
- Subway stations

Data viz origami.


Unsolved things:
---------------
Voronoi is degenerate, or 4 polygons come together.
